/// <reference types="node" />
import { Image, CanvasRenderingContext2D } from 'canvas';
export declare class Utils {
    constructor();
    centerImage: (base: Image, data: Image) => {
        x: number;
        y: number;
        width: number;
        height: number;
    };
    centerImagePart: (data: Image, maxWidth: number, maxHeight: number, widthOffset: number, heightOffest: number) => {
        x: number;
        y: number;
        width: number;
        height: number;
    };
    drawImageWithTint: (ctx: CanvasRenderingContext2D, image: Image, color: string, x: number, y: number, width: number, height: number) => CanvasRenderingContext2D;
    percentColor: (pct: number, percentColors: {
        pct: number;
        color: {
            r: number;
            g: number;
            b: number;
        };
    }[]) => string;
    wrapText: (ctx: CanvasRenderingContext2D, text: string, maxWidth: number) => Promise<unknown>;
    silhouette: (ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number) => CanvasRenderingContext2D;
    getBuffer: (url: string) => Promise<Buffer>;
    fetch: (url: string) => Promise<any>;
    capitalize: (content: string) => string;
    streamToArray: (stream: any) => Promise<unknown>;
}
